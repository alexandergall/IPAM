#!/usr/bin/perl

my $base_dir;
BEGIN {
  $base_dir = '/home/noc/IPAM';
  if (exists $ENV{IPAM_BASE}) {
    $base_dir = $ENV{IPAM_BASE};
  }
}
use strict;
use warnings;
use lib join('/', $base_dir, 'lib/perl5');
use IPAM 0.01;

my @zones;

sub usage() {
  print <<"EOF";
usage: $0 [zone] ...
EOF
exit(1);
}

my $file = "$base_dir/ipam.xml";
system("cd $base_dir && make --silent validate") == 0 or die;
my $ipam = IPAM->new({ verbose => undef, base_dir => $base_dir,
		       validate => undef});
$ipam->load($file);
my $zone_r = $ipam->registry(IPAM::REG_ZONE);
if (@ARGV) {
  foreach (@ARGV) {
    my $zone = $zone_r->lookup($_) or
      die "Unknown zone $_";
    push(@zones, $zone);
  }
} else {
  @zones = $zone_r->things();
}
foreach my $zone (@zones) {
  my $dir = $zone->directory();
  if ($dir eq 'IGNORE') {
    warn "Zone ".$zone->name()." ignored.\n";
    next;
  }
  $file = join('/', $dir, 'd.ipam');
  ## Ouput the full name of the zone file.  The Makefile depends on this!
  print "$file\n";
  open(ZONE, ">$file") or
    die "Can't open $file: $!";
  print ZONE ";;;; Automatically generated by $0 on "
    .scalar(localtime(time()))."\n";
  print ZONE ";;;;\n";
  print ZONE ";;;; DO NOT EDIT THIS FILE.  ALL CHANGES WILL BE LOST.\n";
  print ZONE ";;;;\n";
  print ZONE ";;;; Updates to the IP Address Management database must be ";
  print ZONE "done in $base_dir\n\n";
  foreach my $domain (sort { $a->name() cmp $b->name() } $zone->domains()) {
    $domain->print(\*ZONE, undef, 1);
  }
  close(ZONE) or die "Can't close $file: $!";
}

## Local Variables:
## mode: CPerl
## End:
