#!/usr/bin/perl

my $base_dir;
BEGIN {
  $base_dir = '/home/noc/IPAM';
  if (exists $ENV{IPAM_BASE}) {
    $base_dir = $ENV{IPAM_BASE};
  }
}
use strict;
use warnings;
use Getopt::Long;
use lib join('/', $base_dir, 'lib/perl5');
use IPAM 0.01;

my %opt;
my @zones;
my $zones_dir = "$base_dir/zones";

sub usage() {
  print <<"EOF";
usage: $0 [--annotate] [zone] ...
       $0 --conf
EOF
exit(1);
}

GetOptions(\%opt, 'conf', 'annotate') or usage();
($opt{conf} and @ARGV != 0) and usage();
my $file = "$base_dir/ipam.xml";
system("cd $base_dir && make --silent validate") == 0 or die;
my $ipam = IPAM->new({ verbose => undef, base_dir => $base_dir,
		       validate => undef});
$ipam->load($file);

if ($opt{conf}) {
  foreach my $zone ($ipam->registry(IPAM::REG_ZONE)->things()) {
    my $dir = $zone->directory();
    next if $dir eq 'IGNORE';
    print $zone->name()." $dir\n";
  }
  exit(0);
}
my $zone_r = $ipam->registry(IPAM::REG_ZONE);
if (@ARGV) {
  foreach (@ARGV) {
    my $zone = $zone_r->lookup($_) or
      die "Unknown zone $_";
    push(@zones, $zone);
  }
} else {
  @zones = $zone_r->things();
}
foreach my $zone (@zones) {
  $file = join('/', $zones_dir, $zone->name());
  print "Generating ".$zone->name()."\n";
  open(ZONE, ">$file") or
    die "Can't open $file: $!";
  print ZONE ";;;; Automatically generated by $0\n";
  print ZONE ";;;;\n";
  print ZONE ";;;; DO NOT EDIT THIS FILE.  ALL CHANGES WILL BE LOST.\n";
  print ZONE ";;;;\n";
  print ZONE ";;;; Updates to the IP Address Management database must be ";
  print ZONE "done in $base_dir\n\n";
  foreach my $domain (sort { $a->name() cmp $b->name() } $zone->domains()) {
    $domain->print(\*ZONE, undef, $opt{annotate});
  }
  close(ZONE) or die "Can't close $file: $!";
}

## Local Variables:
## mode: CPerl
## End:
